version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:5000/api
    networks:
      - car-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/car-first-aid
      - JWT_SECRET=1653cecd790b6f1b853f61ecc51de1499764e5bd9b3ea5a2ea074a375b9436e776417501b73bc5b49847e46c9d1027bd2fafa430807673ffee83c939c2b80515
      - HUGGING_FACE_API_KEY=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
      - PORT=5000
      - FRONTEND_URL=http://localhost:80
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - car-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - car-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  car-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  mongodb_data: 